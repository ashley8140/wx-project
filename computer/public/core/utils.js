var Utils = {    each: function(obj, callback){        var type = Utils.type(obj), i, len;        if( type === 'array' ){            for( i = 0, len = obj.length; i < len; i++){                if ( callback.call(obj[i], obj[i], i) === false ) {                    break;                }            }        }else{            for( i in obj ){                if ( obj.hasOwnProperty(i) ) {                    if ( callback.call(obj[i], obj[i], i) === false ) {                        break;                    }                }            }        }    },    type: function(obj){        return Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();    },    extend: function(){        var args = Array.prototype.slice.call(arguments);        var target = args.shift() || {};        Utils.each(args, function(item){            Utils.each(item, function(value, key){                target[key] = value;            })        });        return target;    },    choose: function(obj, chooseList){        var result = {};        Utils.each(chooseList, function(item){            result[item] = obj[item];        });        return result;    },    objToParams: function(obj, prefrex){        var list = [];        var result = '';        Utils.each(obj, function(v, k){            list.push ( k + '=' + v);        });        result = list.join('&');        if( prefrex && result ){            result = '?' +result;        }        return result;    }};module.exports = Utils;